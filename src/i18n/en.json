{
	"navigator": {
		"Profile": "Profile",
		"Stack": "Stack",
		"Experience": "Experience",
		"Portfolio": "Portfolio",
		"Links": "Links"
	},
	"profile": {
		"greeting": "Hello! I am",
		"net-name": "0xmmq",
		"real-name": "Wei Tzu Hsiang",
		"job-title": "Backend Software Engineer",
		"job-title-alt": "Backend Engineer",
		"description-1": "I am a backend engineer with a passion for development and technical research, specializing in the blockchain and Fintech space, with 3 years of related experience.",
		"description-2": "I have planned and developed several EVM smart contracts and high-concurrency back-end systems, and have been a member of several Web3 project operations teams in various capacities (translator, consultant, researcher, developer).",
		"description-3": "In addition, I have good communication and cooperation with the team, as well as professional related skills and experience.",
		"readmore-btn": "Read More",
		"contact-btn": "Contact"
	},
	"stack": {
		"Language": "Language",
		"Backend": "Backend",
		"Frontend": "Frontend",
		"Operation": "Operation",
		"Liberary": "Library",
		"Tool": "Tool",
		"Design": "Design"
	},
	"experience": {
		"tmm": {
			"title": "Researcher",
			"organization": "TMM Alpha・Part time",
			"location": "Taiwan・Remote",
			"time": "2024.06 - Now",
			"content": "Experience:\n1. Explore and research new projects on the TON blockchain to provide initial investment opportunities such as angel rounds and VC rounds for the community.\n2. Assist in community operations."
		},
		"axis3d": {
			"title": "Backend Engineer",
			"organization": "Axis3D Technology Co., LTD・Full time",
			"location": "Neihu, Taipei, Taiwan",
			"time": "2023.05 - Now",
			"content": "Stack: FFMpeg, OpenCV, FastAPI, Gin, Tauri, React, Tailwind CSS, Solidity, GCP\nExperience:\n1. Developed and maintained an AI-based multimedia product that, after obtaining patents, generated at least 4 million $NTD in profit for the company within half a year. This product was also used in at least 5 new projects within the company.\n2. Supported the coding of backend systems and AI-related application for multiple projects.\n3. Planned and developed the high concurrency backend system and related EVM contracts for a gamefi project, as well as integrated Discord and X Oauth to prevent Sybil attacks.\n4. Developed and deployed a product key verification server on GCP for the company, which saved approximately 1,000 $NTD in hardware key costs for each product sold.\n5. Assisted the NCDR(National Science & Technology Center for Disaster Reduction)'s project by setting up GCB (GPO), saving the company approximately 600,000 $NTD in outsourcing fees.\n6. Developed AI face-swapping for the 2024 Tainan Lantern Festival, saving the company 100,000 $NTD in outsourcing fees.\n"
		},
		"n3labs": {
			"title": "Chinese Community Manager",
			"organization": "N3 Labs・Part time",
			"location": "Chiyoda, Tokyo, Japan・Remote",
			"time": "2022.10 - 2023.02・5 months",
			"content": "Experience:\n1. Assisted the team in planning and designing online events.\n2. Designed art-related creations for the events.\n3. Provided Web3 security recommendations."
		},
		"izana": {
			"title": "Chinese Consultant",
			"organization": "IZANA INDUSTRIES Ltd・Part time",
			"location": "Road Town,Tortola, British Virgin Islands・Remote",
			"time": "2022.09 - 2023.02・6 months",
			"content": "Stack: React\nExperience:\n1. Assisted the Japanese team in building the official website in English and Chinese, enabling over 30,000 non-Japanese users to get the latest information.\n2. Provided Web3 security recommendations.\n3. Helped translate the manga into English and Chinese, with the English version being published in Japan as a printed book."
		},
		"kaiju-of-cronos": {
			"title": "Junior Developer",
			"organization": "Kaiju of Cronos・Part time",
			"location": "USA・Remote",
			"time": "2022.07 - 2023.01・7 months",
			"content": "Stack: Express, React, DiscordJS, BootStrap\nExperience:\n1. Assisted the team in developing a discord member verification system used by over 2,000 people, saving the team ongoing bot expenses and management costs."
		}
	},
	"portfolio": {
		"title": "Title",
		"about": "About",
		"stack": "Stack",
		"detail": "Detail",
		"polyme": {
			"about": "PolyME is my personal website, used to show information about experience, skills, portfolio, etc. Welcome to visit and contact me.",
			"detail": "This is my personal website, recording my development life. Technically, I use a lot of new front-end toolchains, such as Bun, Vite, SWC, Biome, to speed up the development and compilation process. \n\nIn addition, in order to speed up access to this website, I set up Caddy 2 server to handle static web pages, and use Cloudflare CDN and Http3 to minimize the access time. For SEO, I use Helmet, Open Graph, Google Tag Manager and GA4."
		},
		"quickcerts": {
			"about": "A simple certificate server that can be used to issue certificates for your product to verify that it has been activated.",
			"detail": "This project aims to help developers quickly establish a certificate server for issuing certificates (keys and signatures) for your applications. You can embed the public key into your application and use the signature to verify whether the key is issued by the certificate server you have set up, achieving \"product activation\" functionality.\n\nAdditionally, QuickCerts provides support for temporary permission. If your application requires a \"trial period\" or periodic authorization rather than permanent authorization, you can use the relevant API to achieve this."
		},
		"jumpcross": {
			"about": "This is a GameFi project running on the Arbitrum One network, focusing on relaxation and high playability, and balancing team and player profitability in pursuit of long-term operation.",
			"detail": "In this GameFi project, I am responsible for the development of the backend system and EVM contracts. For the contracts, I used Solidity and HardHat to develop the domain name registration and resolution contract, game token contract, and game master contract; for the back-end system, I developed 6 micro-services, including user login status processing, game data recording, game synchronization, and monitoring of plug-ins, etc. I also use http2 and WebSocket to reduce the time and cost of communicating between users and the servers.\nIn addition, X and Discord Oauth are also connected to increase the difficulty of sybil attacks."
		},
		"vishybrid": {
			"about": "This is an AI-based multimedia broadcasting tool that supports timely background removal and motion capture. It also provides an easy-to-use interface that supports English, Simplified Chinese, Traditional Chinese, and Japanese.",
			"detail": "This tool uses Tauri + React + Tailwind to build the interface, the backend uses OpenCV to do real-time processing of video images (real-time background removal, motion capture), then broadcasts through FFmpeg with media server and NDI SDK, after that, builds APIs in Python to provide the services.\n\nThe product supports multiple input sources (RTSP, NDI, Raw video) and output protocols (RTSP-Opus, NDI-Opus, WebRTC-H264-Opus, WebRTC-VP8-Opus, CTP-AAC) to satisfy all kinds of multimedia transmission needs."
		},
		"pwdport": {
			"about": "This app helps people to generate secure passwords without having to remember too much information.",
			"detail": "By using this password generation tool, it can help people who are used to using the same password to have higher security, and it can also provide a better password generation tool for people who are more aware of information security."
		},
		"discord-member-verification-system": {
			"about": "This is a Discord member verification system that verifies NFT holdings.",
			"detail": "The function of this system is to verify whether the Web3 wallet of the Discord account owner holds the specified token, and also to check the number of tokens for the member level differentiation purpose.\n\nTechnically, I used ExpressJS, MongoDB, and DiscordJS in the backend to provide the API endpoint for Discord OAuth, and to record and update members' data, while in the frontend, I used React and Tailwind together with Rainbow Kit to create an easy-to-use DApp."
		},
		"nft-market-sniper": {
			"about": "This is a timed crawler that monitors prices on the NFT Marketplace website and connects it to the Discord Bot for users to check.",
			"detail": "This is a Discord Bot for monitoring the NFT marketplace on the Cronos chain - ebisu's bay, allowing subscribers to get the latest floor prices for selected Collections.\n\nThe technology uses Pyppeteer for periodic crawling and snapshots, and Pycord pushes relevant information to Disocrd for users to reference when prices change. Users can also interact with the bot via bot commands."
		},
		"travel-line-bot": {
			"about": "This is a travel bot with AI text segmentation, which allows users to check prices in different currencies with simple conversations, and provides some small functions for travel.",
			"detail": "This is a Line bot that allows users to conveniently travel by providing user-friendly commands to find prices in $NTD and $USD based on the Bank of Taiwan's real-time exchange rate. It also provides convenient buttons for users to check the weather information of their current location and take notes.\n\nI used Django to build the callback API for Line Bot to use. The user commands use Jieba to determine which actions to perform based on the word token. The exchange rate is obtained by crawling the Bank of Taiwan exchange rate periodically."
		},
		"goink": {
			"about": "GoInk is a project template that helps developers quickly build a server. Use the gin framework.",
			"detail": "This project is based on the following open source libraries:\n\n- Gin\n- swaggo\n- zap\n- lumberjack\n- golang-jwt\n\nIt is used to quickly build a web server with mainstream infrastructure to provide an environment for quickly developing API routes, middleware, and database operations, and to save the time of file hierarchy planning and log customization."
		},
		"auto-interacter": {
			"about": "This is a script for fully automated interaction with EVM contracts. The repository is used for Scroll blockchain interactions.",
			"detail": "This script was born out of the popularity of participating in blockchain project airdrops, where manual project interactions were becoming less and less rewarding, making automated interactions with a large number of accounts becoming a need for the majority of people.\n\nI developed this project to improve my blockchain knowledge and skills, and to provide others with the opportunity to study how to automate interaction contracts.\n\nThis project mainly uses EthersJS to interact with EVM contracts, and most of the development time is spent on analyzing the ABI of each project's contract and the results of the contract interaction returns."
		},
		"recipe-master": {
			"about": "This project was my Bachelor of Computer Science graduation project, categorized under the theme of Computer Graphics, which is a web application that uses photos to find recipes.",
			"detail": "This project combines crawler and image search technology, users can upload images to the API endpoint built by Flask, the image will be processed by OpenCV through a series of perceptual hash algorithms, and then compared with remote and local image libraries to confirm that the food in the image most likely belongs to the category. Finally, return to the user the relevant recipes link."
		},
		"mymemo": {
			"about": "This is a simple GUI calendar program written in Qt5.",
			"detail": "After a lot of command-line based practice and development during my studies, I was curious about GUI programs, and wanted to understand how graphical applications are implemented generally. After a short period of research, I decided that Qt5 was the most suitable graphical framework for me to implement my first GUI program, as I had mostly developed in C++ during my studies.\n\nI used a lot of C++ STL and pointer manipulation to optimize performance, and used the Qt designer to design the interface and bind interactive components to logic functions. During development, I also used system level libraries to enable my application to register in the registry and autostart at boot."
		}
	},
	"links": {
		"footer-msg": "For business cooperation, welcome to leaving your details by contact channels above, and I will respond as soon as possible."
	},
	"theme": {
		"dark": "Dark",
		"light": "Light"
	},
	"language": "Language",
	"tip": {
		"suggestUseComputer": "For the best experience, read this page on a computer."
	}
}
